{
    "openapi": "3.0.3",
    "info": {
      "title": "My Store",
      "description": "This is an API for a store that allows users, according to their user role, to perform different actions such as select, create, modify and delete; on the following resources: orders, products and customers.\n\n Endpoints that include the guest user role are publicly available. To execute such endpoints you must follow the next steps:\n\n‚úîÔ∏è Go to the first endpoint (__/auth/login__) entering __jperez__ and __123456__ as user and password respectively.\n‚úîÔ∏è The API returns a token that will enable access to the other endpoints.\n‚úîÔ∏è Copy the token, click the Authorize button or any of the padlock icons below, and finally enter the token when it is required.\n\n\nIn order to try out other endpoints please contact the developer and ask for the corresponding credentials.\n\nüëá\n\nEmail: [hello@sandrosimon.com](mailto:hello@sandrosimon.com)\n\nLinkedin: [linkedin.com/in/sandrosimonore/](https://www.linkedin.com/in/sandrosimonore/)",
      
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "/api/v1",
        "description": "Server"
      }
      
    ],
    "tags": [
      {
        "name": "Authentication",
        "description": ""
      },
      {
        "name": "Product",
        "description": ""
      },
      {
        "name": "Customer",
        "description": ""
      },
      {
        "name": "Order",
        "description": ""
      },
      {
        "name": "User",
        "description": ""
      }
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Users get access token here.",
          "description": "Get your access token here.",
          "operationId": "handleLogin",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "jperez"
                    },
                    "password": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "jperez"
                      },
                      "password": {
                        "type": "string",
                        "example": "123456"
                      }
                    } 
                  }
                }
                
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        }      
      },
      "/auth/changePassword": {
        "put": {
          "tags": [
            "Authentication"
          ],
          "summary": "User roles with access to this endpoint: üëâ admin, seller",
          "description": "Change your password here.",
          "operationId": "handleChangePassword",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currentPassword": {
                      "type": "string",
                      "example": "123456"
                    },
                    "newPassword": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "jperez"
                      },
                      "password": {
                        "type": "string",
                        "example": "123456"
                      }
                    } 
                  }
                }
                
              }
            },
            "405": {
              "description": "Invalid input"
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }      
      },

      "/products": {
        "get": {
          "tags": [
            "Product"
          ],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get all products.",
          "operationId": "getAllProducts",
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref":"#/components/schemas/Product"
                    }

                  }
                  
                }
              }
            },
            "500":{
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "User roles with access to this endpoint üëâ admin",
          "description": "Create a new product.",
          "operationId": "createOneProduct",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":"#/components/schemas/Product"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Product"  
                  }
                }
                
              }
            },
            "403": {
              "description": "You can't complete this action."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }      
      },
      "/products/{id}": {
        "get": {
          "tags": [
            "Product"
          ],
          "summary": "User roles with access to this endpoint üëâ admin, seller, guest",
          "description": "Get one product.",
          "operationId": "getOneProduct",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "Enter the id of the product to show.",
              "schema": {
                "type": "string",
                "pattern": "^[A-Z]{1}[0-9]{3}$",
                "example": "A100"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Product"
                  }
                }
              }
            },
            "404": {
              "description": "Product does not exist."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "put": {
          "tags": [
            "Product"
          ],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Update an existing product.",
          "operationId": "updateOneAccount",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the product to update.",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^[A-Z]{1}[0-9]{3}$",
                "example": "A100"
              }
            } 
          ],
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "description": "LECHE AMARILLA",
	                "uom": "UND",
	                "stock": 0.00,
	                "lastPrice": 5.8,
                	"suggestedPrice": 7
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "403": {
              "description":"You're not authorized to complete this action."
            },
            "404": {
              "description": "The product does not exist."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
          
        },
        "delete": {
          "tags": [
            "Product"
          ],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Delete a product.",
          "operationId": "deleteOneProduct",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the product id to delete.",
              "required": true,
              "schema": {
                "type": "string",
                "pattern":"^[A-B]{1}[0-9]{3}$",
                "example":"A100"
              }
            }
          ],
          "responses": {
            "204":{ "description": "The item was succesfully removed." },
            "403": { "description":"You're not authorized to complete this action." },
            "404":{ "description": "The item does not exist." },
            "500":{ "description": "An unexpected error has happened on the server." }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }
        
      },

      "/customers": {
        "get": {
          "tags": ["Customer"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get all customers.",
          "operationId": "getAllCustomers",
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref":"#/components/schemas/Customer"
                    }  
                  }
                }
              }
            },
            "500": {
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "post": {
          "tags": [
            "Customer"
          ],
          "summary": "User roles with access to this endpoint: üëâ admin, seller",
          "description": "Create a new customer.",
          "operationId": "createOneCustomer",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":"#/components/schemas/Customer"
                },
                "example": {
                  "id": "99999999",
                  "email": "plegua@gmail.com",
                  "firstName": "PAOLA",
                  "lastName": "LEGUA"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Customer"  
                  }
                }
                
              }
            },
            "403": {
              "description":"You're not authorized to complete this action."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }      
      },
      "/customers/{id}": {
        "get": {
          "tags": ["Customer"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get one customer.",
          "operationId": "getOneCustomer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the customer to show.",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^[0-9]{8,10}$",
                "example": "12345678"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Customer"
                  }
                }
              }
            },
            "404": {
              "description": "The customer does not exist."
            },
            "500":{
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "put": {
          "tags": ["Customer"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller",
          "description": "Update an existing customer.",
          "operationId": "updateCustomer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the customer to update.",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^[0-9]{8,10}$",
                "example": "12345678"
              }
            } 
          ],
          "requestBody": {
            "description": "Update an existent travel in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "email": "mfragides@gmail.com",
	                "firstName": "MISHEL",
                  "lastName": "FRAGIDES",
                  "salespersonId": "ssimon"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            },
            "403": {
              "description":"You can't complete this action."
            },
            "404": {
              "description": "The customer does not exist."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
          
        },
        "delete": {
          "tags": ["Customer"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Delete an customer.",
          "operationId": "deleteCustomer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the customer to delete.",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^[0-9]{8,10}$",
                "example": "12345678"
              }
            }
          ],
          "responses": {
            "204":{
              "description": "The customer was deleted successfully."
            },
            "403": {
              "description":"You're not authorized to complete this action."
            },
            "404": {
              "description":"The customer does not exist."
            },
            "500":{
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }
      },

      "/orders": {
        "get": {
          "tags": ["Order"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get all orders",
          "operationId": "getAllOrders",
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref":"#/components/schemas/Order"
                    }  
                  }
                }
              }
            },
            "500": {
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "post": {
          "tags": ["Order"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller",
          "description": "Create a new order.",
          "operationId": "createOrder",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "date": "2022-10-05",
                  "customerId": "22222222",
                  "items": [
                    {
                      "productId": "A100",
                      "quantity": "5.00",
                      "unitPrice": "4.50"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Order"  
                  }
                }
                
              }
            },
            "403": {
              "description":"You're not authorized to complete this action."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }      
      },
      "/orders/{id}": {
        "get": {
          "tags": ["Order"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get one order.",
          "operationId": "getOneOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the product to show.",
              "required": true,
              "schema": {
                "type": "integer",
                "format":"int64",
                "example": 1
              }
              
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/Order"
                  }
                }
              }
            },
            "404": {
              "description": "The order was not found."
            },
            "500":{
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "put": {
          "tags": ["Order"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller",
          "description": "Update an existing order.",
          "operationId": "updateOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the order to update.",
              "required": true,
              "schema": {
                "type": "number",
                "format":"int64",
                "example":1
              }
            } 
          ],
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                    "date": "2022-10-07",
                    "customerId": "40483785",
                    "items": [
                      {
                        "productId": "A200",
                        "quantity": "1.00",
                        "unitPrice": "50"
                      }
                    ]
                  }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "403": {
              "description":"You're not authorized to complete this action."
            },
            "404": {
              "description": "The order was not found."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
          
        },
        "delete": {
          "tags": ["Order"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Delete an order.",
          "operationId": "deleteOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the order id to delete.",
              "required": true,
              "schema": {
                "type": "integer",
                "format":"int64",
                "example": 1
              }
            }
          ],
          "responses": {
            "204":{
              "description": "The transaction was deleted successfully."
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "404": {
              "description": "The order does not exist."
            },
            "500":{
              "description": "Unexpected error."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }
      },
      
      "/users": {
        "get": {
          "tags": ["User"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Get all users",
          "operationId": "getAllUsers",
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref":"#/components/schemas/User"
                    }  
                  },
                  "example": [{
                    "id": "ssimon",
                    "role": "admin",
                    "email": "hello@sandrosimon.com",
                    "firstName": "SANDRO",
                    "lastName": "SIMON"
                  }]
                }
              }
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "500": {
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "post": {
          "tags": ["User"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Create a new user.",
          "operationId": "createOneUser",
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":"#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/User"  
                  }
                }
                
              }
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "500": {
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }      
      },
      "/users/{id}": {
        "get": {
          "tags": ["User"],
          "summary": "User roles with access to this endpoint: üëâ admin, seller, guest",
          "description": "Get one user.",
          "operationId": "getOneUser",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the user to show.",
              "required": true,
              "schema": {
                "type": "string",
                "example": "jperez"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref":"#/components/schemas/User"
                  },
                  "example": {
                    "id": "ssimon",
                    "role": "admin",
                    "email": "hello@sandrosimon.com",
                    "firstName": "SANDRO",
                    "lastName": "SIMON"
                  }
                }
              }
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "404": {
              "description": "The user was not found."
            },
            "500": {
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        },
        "put": {
          "tags": ["User"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "Update an existing user.",
          "operationId": "updateOneUser",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the id of the user to update.",
              "required": true,
              "schema": {
                "type": "string",
                "example": "ssimon"
              }
            } 
          ],
          "requestBody": {
            "description": "Enter data according to the example shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "role": "admin",
                  "password": "1234asd",
                  "email": "hello@sandrosimon.com",
                  "firstName": "SANDRO",
                  "lastName": "SIMON"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "404": {
              "description": "The entered user does not exist."
            },
            "500": {
              "description":"An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
          
        },
        "delete": {
          "tags": ["User"],
          "summary": "User roles with access to this endpoint: üëâ admin",
          "description": "delete an account",
          "operationId": "deleteOneAccount",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Enter the user id to delete.",
              "required": true,
              "schema": {
                "type": "string",
                "example": "jperez"
              }
            }
          ],
          "responses": {
            "204":{
              "description": "The user was succesfully removed."
            },
            "403": {
              "description": "You're not authorized to complete this action."
            },
            "404":{
              "description": "The user does not exist."
            },
            "500":{
              "description": "An unexpected error has happened on the server."
            }
          },
          "security": [
            { "storeAuth": [] }
          ]
        }
      }  
    },
    "components": {
      "schemas": {
        "Product": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "A100"
            },
            "description": {
              "type": "string",
              "example": "JABON"
            },
            "uom": {
              "type": "string",
              "example": "UND"
            },
            "stock": {
              "type": "number",
              "example": 10
            },
            "lastPrice": {
              "type": "number",
              "example": 25
            },
            "suggestedPrice": {
              "type": "number",
              "example": 100.00
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "lgalindo"
            },
            "role": {
              "type": "string",
              "example": "admin"
            },
            "password": {
              "type": "string",
              "example": "admin123"
            },
            "email": {
              "type": "string",
              "example": "admin@database.com"
            },
            "firstName": {
              "type": "string",
              "example": "Lizbeth"
            },
            "lastName": {
              "type": "string",
              "example": "Galindo"
            }
          }
        },
        "Customer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "40483785"
            },
            "email": {
              "type": "string",
              "example": "lgalindo@mail.com"
            },
            "firstName": {
              "type": "string",
              "example": "Marylin"
            },
            "lastName": {
              "type": "string",
              "example": "Galindo"
            },
            "salespersonId": {
              "type": "string",
              "example": "mgalindo"
            }
          }
        },
        "Order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format":"int64"
            },
            "date": {
              "type": "string"
            },
            "customerId": {
              "type": "string"
            },
            "salespersonId": {
              "type": "string"
            },
            "items": {
              "type":"array"
            }
          }
        }
      },
      "securitySchemes": {
        "storeAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }  
  }